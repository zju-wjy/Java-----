115个Java面试题和答案

面向对象OOP编程
Java是一个支持并发基于类和面向对象的计算机编程语言，面向对象软件开发有以下优点：
1）代码开发模块化，更易维护和修改
2）代码复用
3）增强代码的可靠性和灵活性。
4）增加代码的可理解性

面向对象的主要特性有：封装继承多态和抽象。
1）封装给对象提供了隐藏内部特性和行为的能力，对象提供一些能被其他对象访问的方法来改变其内部数据。有三种修饰符public、private和protected，每一种给其他的位于同一包或者不同包下面的对象赋予了不同的访问权限。
	封装好处，（1）通过隐藏对象的属性来保护对象的内部状态。
			  （2）提高代码的可用性和可维护性，因为对象的行为可以被单独的改变或者扩展。
			  （3）禁止了对象之间的不良交互提高了模块化。
2）多态，多态是编程语言给不同的底层数据类型做相同的接口展示的一种能力，一个多态类型上的操作可以应用到其他类型的值上面。
3）继承，继承给对象提供了从基类获取字段和方法的能力，继承提供了代码的重用行，也可以在不修改类的情况下给现存的类添加新特性。
4）抽象，抽象把想法从具体的实例分离出来的步骤。因此要根据他们的功能而不是实现细节来创建类。Java支持创建只暴露接口而不包含方法实现的抽象的类。这种抽象技术的主要目的是把类的行为和实现细节分离开。

抽象和封装的不同：
	抽象和封装是互补的概念。一方面抽象关注对象的行为另一方面封装关注对象行为的细节。一般通过隐藏对象内部状态信息做到封装，因此封装可以看成是用来提供抽象的一种策略。

常见Java问题
1，什么是Java虚拟机？为什么Java被称为平台无关的编程语言？
	Java虚拟机是一种可以执行Java字节码的虚拟机进程，Java源文件被编译成能被Java虚拟机执行的字节码文件。

	Java被设计成允许应用程序可以运行在任意的平台，不需要程序员为每一个平台单独重写或者重新编译，Java虚拟机将这个变为可能，因为它知道底层硬件平台的指令长度和其他特性。
2，JDK和JRE的区别是什么？
	Java运行时环境（JRE)是将要执行Java程序的Java虚拟机。它同时包含了执行applet需要的浏览器插件。
	Java开发工具包（JDK）是完整的Java软件开发包，包含了JRE，编译器和其他工具，可以让开发者开发编译执行Java应用程序。
3，static关键字是什么意思？Java是否可以覆盖一个private或者static方法？
	static关键字表明一个成员变量或者是成员方法可以在没有所属的类的实例情况下被访问。
	Java中static不能被覆盖，因为方法覆盖是基于运行时动态绑定的，而static方法是编译时静态绑定的。static方法跟类的任何实例都不相关，所以概念上不适用。
4，是否可以在static环境中访问非static变量？
	static变量在Java中是属于类的，它在所有的实例中的值是一样的。当类被虚拟机载入的时候，会对static变量进行初始化。如果你的代码尝试不用实例来访问非static对象，编译器会报错，因为这些变量还没有被创建出来，还没有跟任何实例关联上。
5，Java支持的数据类型有哪些？什么是自动拆装箱？
	Java语言支持8种基本数据类型：byte，short,int,long,float,double,boolean,char
	自动装箱是Java编译器在基本数据类型和对应的对象包装器之间的一个转化。比如：把int转化成Integer，double转化成double。反之则是自动拆箱。
6，Java的方法覆盖和方法重载是什么意思？
	Java中的方法重载发生在同一个类里面两个或者多个方法的方法名相同但是参数不同的情况。
	方法覆盖则是说子类重新定义了父类的方法，方法覆盖必须有相同的方法名参数列表和返回类型。覆盖者可能不会限制它所覆盖的方法的访问。
7，Java中，什么是构造函数？什么是构造函数重载？什么是复制构造函数？
	当新对象被创建时，构造函数会被调用。每一个类都有构造函数，如果程序员没有给类提供构造函数时Java编译器会为这个类创建一个默认的构造函数。

	Java中构造函数重载和方法重载很相似。可以为一个类构建多个构造函数，每一个构造函数必须有它自己唯一的参数列表。

	Java不支持像C++中那样的复制构造函数，这个不同点是因为如果你不自己写构造函数的情况下，Java不会创建默认的复制构造函数。
8，Java支持多继承吗？
	不支持，Java不支持多继承，每个类只能继承一个类，但是可以实现多个接口。
9，接口和抽线类的区别是什么？
	Java提供和支持创建抽象类和接口。它们的实现有共同点，不同点在于：
		1）接口中所有的方法隐含的都是抽象的，而抽象类则可以同时包含抽象和非抽象的方法。
		2）类可以实现很多个接口，但是只能继承一个抽象类。
		3）类如果要实现一个接口，它必须要实现接口声明的所有方法。但是类可以不实现抽象类声明的所有方法，当然在这种情况下，类也必须声明成是抽象的。
		4）抽象类可以在不提供接口方法实现的情况下实现接口。
		5）Java接口中声明的变量默认都是final的，抽象类中可以包含非final的变量。
		6）Java接口中的成员函数默认是public的。抽象类的成员函数可以是private，protected或者是public。
		7）接口是绝对抽象的，不可以被实例化。抽象类也不可以被实例化但是如果它包含main方法的话是可以被调用的。
10，什么是值传递和引用传递？
	对象被值传递，意味着传递了对象的一个副本。因此就算是改变了对象副本也不会影响源对象的值。
	对象被引用传递，意味着传递的并不是实际的对象而是对象的引用。因此外部对引用对象的改变或反映到所有的对象上。

Java线程相关知识
11，进程和线程的区别？
	进程是执行着的应用程序，而线程是进程的一个执行序列，一个进程可以有多个线程。线程又叫轻量级进程。
12，创建线程的方式
	创建线程有三种方式：
	1）继承Thread类
	2）实现Runnable接口
	3）应用程序可以使用Executor矿建来创建线程池

	实现Runnable接口的方式更受欢迎，因为不需要继承Thread类，在应用设计中已经继承了别的对象的情况下，这需要多继承（而Java不支持多继承），只能实现接口。同时线程池也是一种非常高效的容易实现和使用的方法。
13，概括的解释线程的几种可用状态
	线程在执行过程，可以处于下面几种状态：
		就绪(Runnable)：线程准备运行，不一定马上就开始执行。
		运行中(Running)：进程处于执行线程的代码。
		等待中(Waiting)：线程处于阻塞状态，等待外部的处理结束。
		睡眠中(Sleeping)：线程被强制睡眠。
		I/O阻塞(Blocked on I/O)：等待I/O操作完成。
		同步阻塞(Blocked on Synchronization)：等待获取锁。
		死亡(Dead)：线程完成了执行。
14，同步方法和同步代码块的区别是什么？
	在Java语言中，每一个对象都有一把锁，线程可以使用synchronized关键字获取对象上的锁，synchronized关键字可应用在方法级别或者是代码块级别。
15，在监视器内部，是如何做线程同步的？程序应该做哪种级别的同步？
	监视器和锁在Java虚拟机中是一块使用的，监视器监视一块同步代码块，确保一次只有一个线程执行同步代码块，每一个监视器和一个对象引用相关联，线程在获取锁之前不允许执行同步代码块。
16，什么是死锁？
	两个进程都在等待对方执行完毕才能继续往下执行的时候就发生了死锁，结果就是两个进程都陷入了无限的等待中。
17，如何确保N个线程可以访问N个资源而同步是导致死锁？
	使用多线程的时候，一种非常简单避免死锁的方法就是指定获取锁的顺序，并强制线程按照指定的顺序获取锁。因此如果所有的线程都是以同样的顺序加载和释放锁就不会出现死锁了。